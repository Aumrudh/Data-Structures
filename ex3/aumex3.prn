Script started on Wednesday 17 July 2019 12:55:07 PM IST
[?1034h[18bit034@mepcolinux ex3]$cat stack.h
//Programmed By AUMRUDH LAL KUMAR TJ
//STACK USING SINGLY LINKED LIST
#include<stdio.h>
#include<stdlib.h>
typedef struct stack_node
{
   char data;
   struct stack_node *next;
}node;
typedef node *stack;
void push(char,stack);
int pop(stack);
int ISEmpty(stack);
void display(stack);
void bp(char[],stack);
stack initialize();
int top(stack);
[18bit034@mepcolinux ex3]$cat imp.c
#include"stack.h"
stack initialize()
{
    stack temp;
    temp=(node*)malloc(sizeof(node));
    if(temp==NULL)
     {
      printf("Memory Not Allocated\n");
      exit(0);
     }
    temp->next=NULL;
    return temp;
}
void push(char p,stack s)
{
  static int x=1;
  stack temp;
  int h;
  temp=(node*)malloc(sizeof(node));
  if(temp==NULL)
   {
    printf("Memory Not allocate\n");
    exit(0);
   }
     temp->data=p;
     temp->next=s->next;
     s->next=temp;
     h=top(s);
     printf("Top Element is : %c\n",h);
}
int pop(stack s)
{
  int a;
  if(s->next==NULL)
   {
    return -1;
   }
  else
  {
   stack temp;
   temp=s->next;
   s->next=s->next->next;
   a=temp->data;
   free(temp);
   return a;
  }
}
int top(stack header)
{
        stack t;
        t=header->next;
        return(t->data);
}
int ISEmpty(stack s)
{
   if(s->next==NULL)
   {
    return 1;
   }
   else
   {
     return 99;
   }
}
void display(stack s)
{
    stack temp;
    temp=s->next;
    if(temp==NULL)
     {
       printf("Stack Underflow\n");
       exit(0);
     }
    while(temp!=NULL)
     {
       printf("%c\t",temp->data);
       temp=temp->next;
     }
}
void bp(char s[],stack s1)
{
   char k,c;
   int i,flag=0,f=0;
   for(i=0;s[i]!='\0';i++)
    {
      if(s[i]=='{'||s[i]=='['||s[i]=='(')
        {
          push(s[i],s1);
        }
      if(s[i]=='}'||s[i]==']'||s[i]==')')
       {
        c=pop(s1);
        if(s[i]=='}'&&c=='{')
          {
            continue;
          }
        else if(s[i]==')'&&c=='(')
          {
            continue;
          }
        else if(s[i]==']'&&c=='[')
          {
            continue;
          }
        else
         {
          break;
         }
       }
    }
   f=ISEmpty(s1);
 if(f==1)
   {
     printf("Correct Sequence\n");
   }
   else
   {
     printf("Unbalanced\n");
   }
}
[18bit034@mepcolinux ex3]$cat app.c
#include"stack.h" 
main()
{
    int ch;
    char t[10],temp,key;
    stack s,s1;
    s=initialize();
    s1=initialize();
    while(1)
    {
        printf("1-PUSH\n2-POP\n3-DISPLAY\n4-Balancing_Paranthesis\n");
        printf("Enter the choice number\n");
        scanf(" %d",&ch);
        switch(ch)
        {
        case 1:

           printf("Enter the element to be pushed : ");
           scanf(" %c",&key);
           push(key,s);
        break;
        case 2:
          temp=pop(s);
          if(temp==-1)
             printf("Stack Underflow\n");
          else
             printf("The popped Element is %c\n",temp);
        break;
        case 3:
           display(s);
        break;
        case 4:
          printf("Enter String to be Checked\n");
          scanf("%s",t);
          bp(t,s1);
        break;
       default:
          printf("Entered Wrong Choice number\n");
          exit(1);
      }
    }
}


[18bit034@mepcolinux ex3]$./so[K[Kop
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
1
Enter the element to be pushed : a
Top Element is : a
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
1
Enter the element to be pushed : b
Top Element is : b
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
3
b	a	1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
2
The popped Element is b
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
2
The popped Element is a
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
4
Enter String to be Checked
{}
Top Element is : {
Correct Sequence
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
4
Enter String to be Checked
{[]
Top Element is : {
Top Element is : [
Unbalanced
1-PUSH
2-POP
3-DISPLAY
4-Balancing_Paranthesis
Enter the choice number
6
Entered Wrong Choice number
[18bit034@mepcolinux ex3]$exit
exit

Script done on Wednesday 17 July 2019 12:55:47 PM IST
